// <auto-generated />
using Be.Vlaanderen.Basisregisters.ProjectionHandling.LastChangedList.Microsoft;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Be.Vlaanderen.Basisregisters.ProjectionHandling.LastChangedList.Migrations
{
    [DbContext(typeof(LastChangedListContext))]
    [Migration("20181030140033_AddedHasErrorsToLastChangedListModel")]
    partial class AddedHasErrorsToLastChangedListModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Redis")
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Be.Vlaanderen.Basisregisters.ProjectionHandling.LastChangedList.Model.LastChangedRecord", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AcceptType");

                    b.Property<string>("CacheKey");

                    b.Property<bool>("HasErrors");

                    b.Property<long>("LastPopulatedPosition");

                    b.Property<long>("Position");

                    b.Property<string>("Uri");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("CacheKey");

                    b.HasIndex("HasErrors");

                    b.HasIndex("Position");

                    b.ToTable("LastChangedList");
                });

            modelBuilder.Entity("Be.Vlaanderen.Basisregisters.ProjectionHandling.Runner.ProjectionStates.ProjectionStateItem", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("Position");

                    b.HasKey("Name")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("ProjectionStates","Redis");
                });
#pragma warning restore 612, 618
        }
    }
}
