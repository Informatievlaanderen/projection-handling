// <auto-generated />
using System;
using Be.Vlaanderen.Basisregisters.ProjectionHandling.LastChangedList.Microsoft;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Be.Vlaanderen.Basisregisters.ProjectionHandling.LastChangedList.Migrations
{
    [DbContext(typeof(LastChangedListContext))]
    partial class LastChangedListContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Redis")
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Be.Vlaanderen.Basisregisters.ProjectionHandling.LastChangedList.Model.LastChangedRecord", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AcceptType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CacheKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ErrorCount")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("LastError")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("LastPopulatedPosition")
                        .HasColumnType("bigint");

                    b.Property<long>("Position")
                        .HasColumnType("bigint");

                    b.Property<bool>("ToBeIndexed")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bit")
                        .HasComputedColumnSql("CAST(CASE WHEN (([Position] > [LastPopulatedPosition]) AND ([ErrorCount] < 10)) THEN 1 ELSE 0 END AS bit) PERSISTED");

                    b.Property<string>("Uri")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("CacheKey");

                    b.HasIndex("ErrorCount");

                    b.HasIndex("LastError");

                    b.HasIndex("Position");

                    b.HasIndex("ToBeIndexed");

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("ToBeIndexed"), new[] { "LastError" });

                    b.HasIndex("ToBeIndexed", "LastError");

                    b.HasIndex("Position", "LastPopulatedPosition", "ErrorCount", "LastError");

                    b.ToTable("LastChangedList", "Redis");
                });

            modelBuilder.Entity("Be.Vlaanderen.Basisregisters.ProjectionHandling.Runner.ProjectionStates.ProjectionStateItem", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DesiredState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DesiredStateChangedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Position")
                        .HasColumnType("bigint");

                    b.HasKey("Name");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Name"));

                    b.ToTable("ProjectionStates", "Redis");
                });
#pragma warning restore 612, 618
        }
    }
}
