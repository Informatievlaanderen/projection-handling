// <auto-generated />
using System;
using Be.Vlaanderen.Basisregisters.ProjectionHandling.LastChangedList.Microsoft;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Be.Vlaanderen.Basisregisters.ProjectionHandling.LastChangedList.Migrations
{
    [DbContext(typeof(LastChangedListContext))]
    [Migration("20210107105632_AddToBeIndexed")]
    partial class AddToBeIndexed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Redis")
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Be.Vlaanderen.Basisregisters.ProjectionHandling.LastChangedList.Model.LastChangedRecord", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AcceptType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CacheKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ErrorCount")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("LastError")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("LastPopulatedPosition")
                        .HasColumnType("bigint");

                    b.Property<long>("Position")
                        .HasColumnType("bigint");

                    b.Property<bool>("ToBeIndexed")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bit")
                        .HasComputedColumnSql("CAST(CASE WHEN (([Position] > [LastPopulatedPosition]) AND ([ErrorCount] < 10)) THEN 1 ELSE 0 END AS bit) PERSISTED");

                    b.Property<string>("Uri")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("CacheKey");

                    b.HasIndex("ErrorCount");

                    b.HasIndex("LastError");

                    b.HasIndex("Position");

                    b.HasIndex("ToBeIndexed")
                        .IncludeProperties(new[] { "LastError" });

                    b.HasIndex("Position", "LastPopulatedPosition", "ErrorCount", "LastError");

                    b.ToTable("LastChangedList");
                });

            modelBuilder.Entity("Be.Vlaanderen.Basisregisters.ProjectionHandling.Runner.ProjectionStates.ProjectionStateItem", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DesiredState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DesiredStateChangedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Position")
                        .HasColumnType("bigint");

                    b.HasKey("Name")
                        .IsClustered();

                    b.ToTable("ProjectionStates", "Redis");
                });
#pragma warning restore 612, 618
        }
    }
}
